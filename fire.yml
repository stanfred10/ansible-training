---
# tasks file for fireeye-check

# Checking fireEye package and version
- name: Fireeye linux check
  block:
  - name: check fireEye installed or not
    shell: rpm -qa | grep xagt
    register: pkg
    ignore_errors: true
    

  - name: Check fireEye version
    shell: "`which yum` list installed | grep xagt | awk '{print $2}' | cut -d'-' -f1"
    register: ver
    ignore_errors: true
    when: pkg.rc == 0
    tags: Check-version, installation, consistency-check

# Removing older version of fireye package
- name: remove older version
  block:
    - name: Uninstall the older version of fireeye
      yum:
        name: xagt
        state: absent
      failed_when: no

    - debug:
          msg: "Package name xagt-{{ver.stdout}} was older and removed."
      when: pkg.rc == 0 and ver.stdout_lines is not regex("{{ fe_ver }}") or force == 'true'
      tags: Remove-older-version, consistency-check
    
# Installing latest version of fireeye package
- name: Install fireeye
  block: 
  - name: Make a directory for FireEye Agent
    file:
      path: /opt/tmp/fireeye-linux-check
      state: directory
      mode: 0744

  - name: Get and Un-tar FireEye Agent tar-ball from S3 Bucket
    unarchive:
      src: https://s3.amazonaws.com/jcrew.shared.software/FireEyeHX/JCrew_IMAGE_FIREEYE_AGENT_LINUX_{{fe_ver}}.tar.gz
      dest: /opt/tmp/fireeye/
      remote_src: yes
    failed_when: no

  - name: Install Fireeye Agent on Linux RHEL 6.8/6.9/6.10 or Amazon Linux 1
    yum:
      name: /opt/tmp/fireeye/xagt-{{fe_ver}}-1.el6.x86_64.rpm
      state: present
      disable_gpg_check: yes
    when: (ansible_distribution == "RedHat" and ansible_distribution_major_version == "6") or (ansible_distribution == "Amazon" and ansible_distribution_major_version == "2018")

  - name: Install FireEye Agent on Linux RHEL-7,8 or Amazon Linux 2 or Oracle Linux 7,8
    yum:
      name: /opt/tmp/fireeye/xagt-{{fe_ver}}-1.el7.x86_64.rpm
      state: present
      disable_gpg_check: yes
    when: (ansible_distribution == "RedHat" and ansible_distribution_major_version == "7") or (ansible_distribution == "RedHat" and ansible_distribution_major_version == "8") or (ansible_distribution == "Amazon" and ansible_distribution_major_version == "2") or (ansible_distribution == "OracleLinux")

  - name: Import the agent configuration file- '.json'
    shell: sudo /opt/fireeye/bin/xagt -i /opt/tmp/fireeye/agent_config.json

# Removing temp file location
  - name: Delete temp location for file copying
    file:
      path: /opt/tmp/fireeye
      state: absent
# Debugging changes made to fireeye package
  - name: Debugging changes 1
    debug:
      msg: "Package name xagt-{{fe_ver}} NOT found and was installed."
    when: pkg.rc != 0

  - name: Debugging changes 2
    debug:
      msg: "Package name xagt-{{ver.stdout}} was found. Package was updated with new package xagt-{{fe_ver}}"
    when: pkg.rc == 0 and ver.stdout_lines is not regex("{{ fe_ver }}")

  - name: Debugging changes 3
    debug:
      msg: "Package name xagt-{{fe_ver}} was installed through a FORCE installation."
    # when: force == 'true'
    failed_when: no

  when: pkg.rc != 0 or ver.stdout_lines is not regex("{{ fe_ver }}") or force == 'true'
  tags: enable-service, installation
# Start the fireeye agent
- name: Start the FireEye Agent Service
  service:
    name: xagt
    state: started
  tags: enable-service
#Fireeye process status check
- name: Fireeye status check
  block:
  - name: Check xagt status
    shell: service xagt status
    ignore_errors: true
    register: xagt

  - name: Starting fireEye service..
    service:
      name: xagt
      state: restarted
    when: (xagt.rc != 0)
    tags: start-service, consitency-check